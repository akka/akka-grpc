//#defaults
akka.grpc.client."*" {

  # Host to use if service-discovery-mechanism is set to static
  host = ""

  service-discovery {
    mechanism = "static"
    # Service name to use if a service-discovery.mechanism other than static
    service-name = ""
    # See https://developer.lightbend.com/docs/akka-management/current/discovery/index.html for meanings for each mechanism
    # if blank then not passed to the lookup
    port-name = ""
    protocol = ""

    # timeout for service discovery resolving
    resolve-timeout = 1s
  }

  # port to use if service-discovery-mechism is static or service discovery does not return a port
  port = 0

  # pick_first or round_robin
  # TODO: test more policies, add support by using io.grpc.internal.AbstractManagedChannelImplBuilder.defaultServiceConfig
  grpc-load-balancing = ""

  deadline = infinite
  override-authority = ""
  user-agent = ""
  # Pulls default configuration from ssl-config-core's reference.conf
  ssl-config = ${ssl-config}
  use-tls = true

  # TODO: Enforce HTTP/2 TLS restrictions: https://tools.ietf.org/html/draft-ietf-httpbis-http2-17#section-9.2

  creation {
    # How many times to retry client creation before giving up
    attempts = 1000

    # How long to wait between client creation attempts
    delay = 400ms
  }

  connection-attempts = -1

  # Service discovery mechamism to use. The default is to use a static host
  # and port that will be resolved via DNS.
  # Any of the mechanisms described [here](https://developer.lightbend.com/docs/akka-management/current/discovery/index.html) can be used
  # including Kubernetes, Consul, AWS API
}
//#defaults
