buildscript {
  repositories {
    gradlePluginPortal()
    maven {
      url "https://repo.akka.io/maven"
    }
  }
}
plugins {
  id 'java'
  id 'application'
  id 'com.lightbend.akka.grpc.gradle' version '2.4.3'
}
repositories {
  mavenCentral()
  maven {
    url "https://repo.akka.io/maven"
  }
}

dependencies {
  implementation 'org.scala-lang:scala-library:2.13.13'

  implementation 'com.typesafe.akka:akka-actor-typed_2.13:2.10.0-M1'
  implementation 'com.typesafe.akka:akka-discovery_2.13:2.10.0-M1'
  implementation 'com.typesafe.akka:akka-stream_2.13:2.10.0-M1'
  implementation 'com.typesafe.akka:akka-pki_2.13:2.10.0-M1'

  implementation 'ch.qos.logback:logback-classic:1.2.13'

  testImplementation 'com.typesafe.akka:akka-actor-testkit-typed_2.13:2.10.0-M1'
  testImplementation 'com.typesafe.akka:akka-stream-testkit_2.13:2.10.0-M1'
  testImplementation 'junit:junit:4.13'
}

task runServer(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'com.example.helloworld.GreeterServer'
}


task runClient(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'com.example.helloworld.GreeterClient'

  // arguments to pass to the application
  if (project.hasProperty("GreeterClient.user"))
    args  project.getProperty("GreeterClient.user")
}

application {
  mainClassName = 'com.example.helloworld.GreeterServer'
}

allprojects {
  apply plugin: 'java'

  tasks.withType(Copy).all {
    duplicatesStrategy 'exclude'
  }
}
