<!-- Post-processed by SbtMavenPlugin -->
<plugin xmlns="http://maven.apache.org/PLUGIN/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/PLUGIN/1.0.0 http://maven.apache.org/xsd/plugin-1.0.0.xsd">
  <name>Akka gRPC</name>
  <description>Generate gRPC client and/or server code</description>
  <groupId>com.lightbend.akka.grpc</groupId>
  <artifactId>akka-grpc-maven-plugin</artifactId>
  <goalPrefix>akka-grpc</goalPrefix>
  <mojos>
    <mojo>
      <goal>generate</goal>
      <description>Generate Akka gRPC model and service code</description>
      <implementation>akka.grpc.maven.GenerateMojo</implementation>
      <instantiationStrategy>singleton</instantiationStrategy>
      <phase>generate-sources</phase>

      <parameters>
        <parameter>
          <name>project</name>
          <required>true</required>
          <editable>false</editable>
          <description>inject the project</description>
        </parameter>
        <parameter>
          <name>language</name>
          <type>string</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate java or scala code</description>
        </parameter>
        <parameter>
          <name>generateClient</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to generate client code</description>
        </parameter>
        <parameter>
          <name>generateServer</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to generate server code</description>
        </parameter>
        <parameter>
          <name>generatorSettings</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>extra settings to pass to the generators</description>
        </parameter>
        <parameter>
          <name>extraGenerators</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>extra generators to load</description>
        </parameter>
        <parameter>
          <name>protoPaths</name>
          <type>list</type>
          <required>false</required>
          <editable>true</editable>
          <description>Where to look for proto files</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>string</type>
          <required>false</required>
          <editable>true</editable>
          <description>Where to write the generated files</description>
        </parameter>
        <parameter>
          <name>protocVersion</name>
          <type>string</type>
          <required>false</required>
          <editable>true</editable>
          <description>The proto compiler version</description>
        </parameter>
        <parameter>
          <name>includeStdTypes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If "true", extract the included google.protobuf standard types and add them to protoc import path.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="" default-value="${project}"/>
        <language implementation="enum" default-value="JAVA">${akka-grpc.language}</language>
        <generateClient implementation="boolean" default-value="true">${akka-grpc.generate-client}</generateClient>
        <generateServer implementation="boolean" default-value="true">${akka-grpc.generate-server}</generateServer>
        <generatorSettings implementation="java.util.List" default-value=""/>
        <extraGenerators implementation="java.util.List" default-value=""/>
        <protoPaths default-value="${project.basedir}/src/main/proto,${project.basedir}/src/main/protobuf">${akka-grpc.protoPaths}</protoPaths>
        <outputDirectory default-value="${project.build.directory}/generated-sources">${akka-grpc.outputDirectory}</outputDirectory>
	<protocVersion implementation="java.lang.String" default-value="-v3.21.12">${akka-grpc.protoc-version}</protocVersion> <!-- checked synced by VersionSyncCheckPlugin -->
        <includeStdTypes implementation="boolean" default-value="false" />
      </configuration>
    </mojo>
    <mojo>
      <goal>test-generate</goal>
      <description>Generate test Akka gRPC model and service code</description>
      <implementation>akka.grpc.maven.TestGenerateMojo</implementation>
      <instantiationStrategy>singleton</instantiationStrategy>
      <phase>generate-test-sources</phase>

      <parameters>
        <parameter>
          <name>project</name>
          <required>true</required>
          <editable>false</editable>
          <description>inject the project</description>
        </parameter>
        <parameter>
          <name>language</name>
          <type>string</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate java or scala code</description>
        </parameter>
        <parameter>
          <name>generateClient</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to generate client code</description>
        </parameter>
        <parameter>
          <name>generateServer</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to generate server code</description>
        </parameter>
        <parameter>
          <name>generatorSettings</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>extra settings to pass to the generators</description>
        </parameter>
        <parameter>
          <name>extraGenerators</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>extra generators to load</description>
        </parameter>
        <parameter>
          <name>protoPaths</name>
          <type>list</type>
          <required>false</required>
          <editable>true</editable>
          <description>Where to look for proto files</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>string</type>
          <required>false</required>
          <editable>true</editable>
          <description>Where to write the generated files</description>
        </parameter>
        <parameter>
          <name>protocVersion</name>
          <type>string</type>
          <required>false</required>
          <editable>true</editable>
          <description>The proto compiler version</description>
        </parameter>
        <parameter>
          <name>includeStdTypes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If "true", extract the included google.protobuf standard types and add them to protoc import path.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="" default-value="${project}"/>
        <language implementation="enum" default-value="JAVA">${akka-grpc.language}</language>
        <generateClient implementation="boolean" default-value="true">${akka-grpc.generate-client}</generateClient>
        <generateServer implementation="boolean" default-value="true">${akka-grpc.generate-server}</generateServer>
        <generatorSettings implementation="java.util.List" default-value=""/>
        <extraGenerators implementation="java.util.List" default-value=""/>
        <protoPaths default-value="src/test/proto,src/test/protobuf">${akka-grpc.protoPaths}</protoPaths>
        <outputDirectory default-value="target/generated-test-sources">${akka-grpc.outputDirectory}</outputDirectory>
        <protocVersion implementation="java.lang.String" default-value="-v3.21.12">${akka-grpc.protoc-version}</protocVersion> <!-- checked synced by VersionSyncCheckPlugin -->
        <includeStdTypes implementation="boolean" default-value="false" />
      </configuration>
    </mojo>
  </mojos>
</plugin>
