<!--
  To test locally, first 'sbt akka-grpc-maven-plugin:publishM2' in the parent dir
  and define the published version as akka.grpc.project.version in the properties block below
  or pass it to mvn when running like so: mvn -Dakka.grpc.project.version=some-version compile exec:exec
-->
<project>
  <modelVersion>4.0.0</modelVersion>
  <name>Akka gRPC Java example project</name>
  <groupId>com.lightbend.akka.grpc</groupId>
  <artifactId>grpc-plugin-tester-java</artifactId>
  <version>0.1-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
    <maven-exec-plugin.version>3.0.0</maven-exec-plugin.version>
    <akka.http.cors.version>1.1.0</akka.http.cors.version>
    <grpc.version>1.36.0</grpc.version> <!-- checked synced by GrpcVersionSyncCheckPlugin -->
    <project.encoding>UTF-8</project.encoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.lightbend.akka.grpc</groupId>
      <artifactId>akka-grpc-runtime_2.12</artifactId>
      <version>${akka.grpc.project.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.megard</groupId>
      <artifactId>akka-http-cors_2.12</artifactId>
      <version>${akka.http.cors.version}</version>
    </dependency>

    <!-- Needed for the generated client -->
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>com.lightbend.akka.grpc</groupId>
        <artifactId>akka-grpc-maven-plugin</artifactId>
        <version>${akka.grpc.project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <generatorSettings>
            <serverPowerApis>true</serverPowerApis>
          </generatorSettings>
          <includeStdTypes>true</includeStdTypes>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <executions>
          <execution>
            <id>getClasspathFilenames</id>
            <goals>
              <!-- provides the jars of the classpath as properties inside of maven
                   so that we can refer to one of the jars in the exec plugin config below -->
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${maven-exec-plugin.version}</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-classpath</argument>
            <classpath />
            <argument>example.myapp.helloworld.GreeterServer</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
