package com.lightbend.grpc.interop

import java.io.InputStream

import scala.concurrent.{Await, ExecutionContext, Future}
import akka.http.scaladsl.model.{HttpRequest, HttpResponse, StatusCodes}
import akka.http.grpc.Grpc
import akka.stream.Materializer
import com.google.protobuf.ByteString
import com.google.protobuf.empty.Empty
import io.grpc.{ManagedChannel, Status, StatusRuntimeException}
import io.grpc.testing.integration.messages.{Payload, PayloadType, SimpleRequest, SimpleResponse}
import io.grpc.testing.integration.test.TestServiceServiceHandler
import io.grpc.testing.integration2.{ChannelBuilder, ClientTester, Settings}
import org.scalatest.WordSpec

import scala.util.Failure

// Generated by our plugin
import io.grpc.testing.integration.test.TestServiceServiceHandler

class GrpcInteropSpec extends WordSpec with GrpcInteropTests {

  grpcTests(IoGrpcJavaServerProvider, AkkaHttpClientProvider)

  grpcTests(AkkaHttpServerProvider, IoGrpcJavaClientProvider)
  grpcTests(AkkaHttpServerProvider, AkkaHttpClientProvider)

  object AkkaHttpServerProvider extends AkkaHttpServerProvider {
    val server = AkkaGrpcServerScala(implicit mat => implicit ec => TestServiceServiceHandler(new TestServiceImpl()))
  }

  object AkkaHttpClientProvider extends AkkaHttpClientProvider {
    def client = AkkaGrpcClientScala(settings => implicit mat => implicit ec => new AkkaGrpcClientTester(settings))
  }

}
